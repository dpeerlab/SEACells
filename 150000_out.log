nohup: ignoring input
findfont: Font family ['Raleway'] not found. Falling back to DejaVu Sans.
findfont: Font family ['Lato'] not found. Falling back to DejaVu Sans.
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/116312 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/116312 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/116312 [00:00<?, ?it/s]
Constructing CSR matrix...
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/116312 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/116312 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/116312 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1899 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/111 [00:00<?, ?it/s]  1%|          | 1/111 [00:00<00:38,  2.88it/s]  2%|▏         | 2/111 [00:00<00:40,  2.70it/s]  3%|▎         | 3/111 [00:01<00:41,  2.63it/s]  4%|▎         | 4/111 [00:01<00:38,  2.76it/s]  5%|▍         | 5/111 [00:01<00:37,  2.82it/s]  5%|▌         | 6/111 [00:02<00:35,  2.94it/s]  6%|▋         | 7/111 [00:02<00:35,  2.92it/s]  7%|▋         | 8/111 [00:02<00:36,  2.86it/s]  8%|▊         | 9/111 [00:03<00:35,  2.90it/s]  9%|▉         | 10/111 [00:03<00:32,  3.12it/s] 10%|▉         | 11/111 [00:03<00:31,  3.14it/s] 11%|█         | 12/111 [00:04<00:30,  3.20it/s] 12%|█▏        | 13/111 [00:04<00:33,  2.89it/s] 13%|█▎        | 14/111 [00:04<00:31,  3.05it/s] 14%|█▎        | 15/111 [00:05<00:31,  3.03it/s] 14%|█▍        | 16/111 [00:05<00:30,  3.16it/s] 15%|█▌        | 17/111 [00:05<00:30,  3.12it/s] 16%|█▌        | 18/111 [00:06<00:29,  3.14it/s] 17%|█▋        | 19/111 [00:06<00:28,  3.21it/s] 18%|█▊        | 20/111 [00:06<00:28,  3.21it/s] 19%|█▉        | 21/111 [00:07<00:31,  2.89it/s] 20%|█▉        | 22/111 [00:07<00:29,  3.07it/s] 21%|██        | 23/111 [00:07<00:33,  2.66it/s] 22%|██▏       | 24/111 [00:08<00:34,  2.53it/s] 23%|██▎       | 25/111 [00:08<00:34,  2.50it/s] 23%|██▎       | 26/111 [00:09<00:37,  2.27it/s] 24%|██▍       | 27/111 [00:09<00:35,  2.36it/s] 25%|██▌       | 28/111 [00:10<00:37,  2.22it/s] 26%|██▌       | 29/111 [00:10<00:36,  2.26it/s] 27%|██▋       | 30/111 [00:11<00:37,  2.14it/s] 28%|██▊       | 31/111 [00:11<00:35,  2.25it/s] 29%|██▉       | 32/111 [00:11<00:35,  2.24it/s] 30%|██▉       | 33/111 [00:12<00:37,  2.10it/s] 31%|███       | 34/111 [00:12<00:38,  2.02it/s] 32%|███▏      | 35/111 [00:13<00:38,  2.00it/s] 32%|███▏      | 36/111 [00:13<00:37,  1.98it/s] 33%|███▎      | 37/111 [00:14<00:39,  1.86it/s] 34%|███▍      | 38/111 [00:15<00:38,  1.89it/s] 35%|███▌      | 39/111 [00:15<00:38,  1.88it/s] 36%|███▌      | 40/111 [00:16<00:37,  1.89it/s] 37%|███▋      | 41/111 [00:16<00:38,  1.81it/s] 38%|███▊      | 42/111 [00:17<00:37,  1.83it/s] 39%|███▊      | 43/111 [00:17<00:36,  1.87it/s] 40%|███▉      | 44/111 [00:18<00:36,  1.86it/s] 41%|████      | 45/111 [00:19<00:37,  1.75it/s] 41%|████▏     | 46/111 [00:19<00:38,  1.67it/s] 42%|████▏     | 47/111 [00:20<00:38,  1.66it/s] 43%|████▎     | 48/111 [00:20<00:37,  1.68it/s] 44%|████▍     | 49/111 [00:21<00:34,  1.78it/s] 45%|████▌     | 50/111 [00:21<00:35,  1.73it/s] 46%|████▌     | 51/111 [00:22<00:34,  1.73it/s] 47%|████▋     | 52/111 [00:23<00:35,  1.64it/s] 48%|████▊     | 53/111 [00:23<00:35,  1.62it/s] 49%|████▊     | 54/111 [00:24<00:36,  1.58it/s] 50%|████▉     | 55/111 [00:25<00:36,  1.55it/s] 50%|█████     | 56/111 [00:25<00:37,  1.49it/s] 51%|█████▏    | 57/111 [00:26<00:36,  1.49it/s] 52%|█████▏    | 58/111 [00:27<00:36,  1.45it/s] 53%|█████▎    | 59/111 [00:28<00:37,  1.40it/s] 54%|█████▍    | 60/111 [00:28<00:36,  1.40it/s] 55%|█████▍    | 61/111 [00:29<00:36,  1.38it/s] 56%|█████▌    | 62/111 [00:30<00:37,  1.31it/s] 57%|█████▋    | 63/111 [00:31<00:37,  1.28it/s] 58%|█████▊    | 64/111 [00:32<00:36,  1.30it/s] 59%|█████▊    | 65/111 [00:32<00:35,  1.30it/s] 59%|█████▉    | 66/111 [00:33<00:36,  1.25it/s] 60%|██████    | 67/111 [00:34<00:33,  1.31it/s] 61%|██████▏   | 68/111 [00:35<00:32,  1.34it/s] 62%|██████▏   | 69/111 [00:35<00:32,  1.30it/s] 63%|██████▎   | 70/111 [00:36<00:31,  1.32it/s] 64%|██████▍   | 71/111 [00:37<00:30,  1.32it/s] 65%|██████▍   | 72/111 [00:38<00:29,  1.30it/s] 66%|██████▌   | 73/111 [00:38<00:29,  1.31it/s] 67%|██████▋   | 74/111 [00:39<00:28,  1.30it/s] 68%|██████▊   | 75/111 [00:40<00:28,  1.25it/s] 68%|██████▊   | 76/111 [00:41<00:27,  1.26it/s] 69%|██████▉   | 77/111 [00:42<00:26,  1.28it/s] 70%|███████   | 78/111 [00:42<00:25,  1.27it/s] 71%|███████   | 79/111 [00:43<00:25,  1.25it/s] 72%|███████▏  | 80/111 [00:44<00:24,  1.25it/s] 73%|███████▎  | 81/111 [00:45<00:23,  1.26it/s] 74%|███████▍  | 82/111 [00:46<00:23,  1.24it/s] 75%|███████▍  | 83/111 [00:46<00:22,  1.27it/s] 76%|███████▌  | 84/111 [00:47<00:21,  1.24it/s] 77%|███████▋  | 85/111 [00:48<00:21,  1.22it/s] 77%|███████▋  | 86/111 [00:49<00:20,  1.23it/s] 78%|███████▊  | 87/111 [00:50<00:19,  1.22it/s] 79%|███████▉  | 88/111 [00:51<00:18,  1.24it/s] 80%|████████  | 89/111 [00:51<00:17,  1.25it/s] 81%|████████  | 90/111 [00:52<00:17,  1.23it/s] 82%|████████▏ | 91/111 [00:53<00:16,  1.24it/s] 83%|████████▎ | 92/111 [00:54<00:15,  1.23it/s] 84%|████████▍ | 93/111 [00:55<00:15,  1.20it/s] 85%|████████▍ | 94/111 [00:55<00:14,  1.20it/s] 86%|████████▌ | 95/111 [00:56<00:13,  1.19it/s] 86%|████████▋ | 96/111 [00:57<00:12,  1.19it/s] 87%|████████▋ | 97/111 [00:58<00:11,  1.17it/s] 88%|████████▊ | 98/111 [00:59<00:11,  1.11it/s] 89%|████████▉ | 99/111 [01:00<00:10,  1.12it/s] 90%|█████████ | 100/111 [01:01<00:09,  1.12it/s] 91%|█████████ | 101/111 [01:02<00:08,  1.12it/s] 92%|█████████▏| 102/111 [01:03<00:08,  1.10it/s] 93%|█████████▎| 103/111 [01:04<00:07,  1.11it/s] 94%|█████████▎| 104/111 [01:05<00:06,  1.08it/s] 95%|█████████▍| 105/111 [01:05<00:05,  1.08it/s] 95%|█████████▌| 106/111 [01:06<00:04,  1.08it/s] 96%|█████████▋| 107/111 [01:07<00:03,  1.08it/s] 97%|█████████▋| 108/111 [01:08<00:02,  1.17it/s] 98%|█████████▊| 109/111 [01:09<00:01,  1.14it/s] 99%|█████████▉| 110/111 [01:10<00:00,  1.14it/s]100%|██████████| 111/111 [01:11<00:00,  1.12it/s]100%|██████████| 111/111 [01:11<00:00,  1.56it/s]
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
