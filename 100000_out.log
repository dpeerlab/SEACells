nohup: ignoring input
findfont: Font family ['Raleway'] not found. Falling back to DejaVu Sans.
findfont: Font family ['Lato'] not found. Falling back to DejaVu Sans.
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  3%|▎         | 2/69 [00:00<00:05, 13.11it/s]  6%|▌         | 4/69 [00:00<00:05, 12.95it/s]  9%|▊         | 6/69 [00:00<00:05, 12.58it/s] 12%|█▏        | 8/69 [00:00<00:04, 12.37it/s] 14%|█▍        | 10/69 [00:00<00:04, 11.91it/s] 17%|█▋        | 12/69 [00:01<00:04, 11.45it/s] 20%|██        | 14/69 [00:01<00:05, 10.82it/s] 23%|██▎       | 16/69 [00:01<00:05, 10.20it/s] 26%|██▌       | 18/69 [00:01<00:05,  9.70it/s] 28%|██▊       | 19/69 [00:01<00:05,  9.40it/s] 29%|██▉       | 20/69 [00:01<00:05,  9.10it/s] 30%|███       | 21/69 [00:02<00:05,  8.77it/s] 32%|███▏      | 22/69 [00:02<00:05,  8.39it/s] 33%|███▎      | 23/69 [00:02<00:05,  8.13it/s] 35%|███▍      | 24/69 [00:02<00:05,  7.82it/s] 36%|███▌      | 25/69 [00:02<00:05,  7.62it/s] 38%|███▊      | 26/69 [00:02<00:05,  7.44it/s] 39%|███▉      | 27/69 [00:02<00:05,  7.13it/s] 41%|████      | 28/69 [00:03<00:05,  6.96it/s] 42%|████▏     | 29/69 [00:03<00:05,  6.82it/s] 43%|████▎     | 30/69 [00:03<00:05,  6.69it/s] 45%|████▍     | 31/69 [00:03<00:05,  6.58it/s] 46%|████▋     | 32/69 [00:03<00:05,  6.46it/s] 48%|████▊     | 33/69 [00:03<00:05,  6.61it/s] 49%|████▉     | 34/69 [00:03<00:05,  6.69it/s] 51%|█████     | 35/69 [00:04<00:05,  6.72it/s] 52%|█████▏    | 36/69 [00:04<00:04,  6.71it/s] 54%|█████▎    | 37/69 [00:04<00:04,  6.66it/s] 55%|█████▌    | 38/69 [00:04<00:04,  6.59it/s] 57%|█████▋    | 39/69 [00:04<00:04,  6.51it/s] 58%|█████▊    | 40/69 [00:04<00:04,  6.44it/s] 59%|█████▉    | 41/69 [00:05<00:04,  6.32it/s] 61%|██████    | 42/69 [00:05<00:04,  6.27it/s] 62%|██████▏   | 43/69 [00:05<00:04,  6.15it/s] 64%|██████▍   | 44/69 [00:05<00:04,  6.00it/s] 65%|██████▌   | 45/69 [00:05<00:04,  5.94it/s] 67%|██████▋   | 46/69 [00:05<00:03,  5.85it/s] 68%|██████▊   | 47/69 [00:06<00:03,  5.73it/s] 70%|██████▉   | 48/69 [00:06<00:03,  5.66it/s] 71%|███████   | 49/69 [00:06<00:03,  5.58it/s] 72%|███████▏  | 50/69 [00:06<00:03,  5.42it/s] 74%|███████▍  | 51/69 [00:06<00:03,  5.30it/s] 75%|███████▌  | 52/69 [00:07<00:03,  5.19it/s] 77%|███████▋  | 53/69 [00:07<00:03,  5.12it/s] 78%|███████▊  | 54/69 [00:07<00:02,  5.01it/s] 80%|███████▉  | 55/69 [00:07<00:02,  4.95it/s] 81%|████████  | 56/69 [00:07<00:02,  4.85it/s] 83%|████████▎ | 57/69 [00:08<00:02,  4.79it/s] 84%|████████▍ | 58/69 [00:08<00:02,  4.69it/s] 86%|████████▌ | 59/69 [00:08<00:02,  4.57it/s] 87%|████████▋ | 60/69 [00:08<00:01,  4.54it/s] 88%|████████▊ | 61/69 [00:08<00:01,  4.48it/s] 90%|████████▉ | 62/69 [00:09<00:01,  4.41it/s] 91%|█████████▏| 63/69 [00:09<00:01,  4.35it/s] 93%|█████████▎| 64/69 [00:09<00:01,  4.30it/s] 94%|█████████▍| 65/69 [00:09<00:00,  4.33it/s] 96%|█████████▌| 66/69 [00:10<00:00,  4.32it/s] 97%|█████████▋| 67/69 [00:10<00:00,  4.33it/s] 99%|█████████▊| 68/69 [00:10<00:00,  4.31it/s]100%|██████████| 69/69 [00:10<00:00,  4.30it/s]100%|██████████| 69/69 [00:10<00:00,  6.35it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:20,  3.38it/s]  3%|▎         | 2/69 [00:00<00:19,  3.39it/s]  4%|▍         | 3/69 [00:00<00:22,  2.91it/s]  6%|▌         | 4/69 [00:01<00:21,  3.06it/s]  7%|▋         | 5/69 [00:01<00:20,  3.07it/s]  9%|▊         | 6/69 [00:01<00:19,  3.20it/s] 10%|█         | 7/69 [00:02<00:20,  3.01it/s] 12%|█▏        | 8/69 [00:02<00:20,  2.91it/s] 13%|█▎        | 9/69 [00:02<00:20,  2.93it/s] 14%|█▍        | 10/69 [00:03<00:21,  2.69it/s] 16%|█▌        | 11/69 [00:03<00:22,  2.62it/s] 17%|█▋        | 12/69 [00:04<00:22,  2.59it/s] 19%|█▉        | 13/69 [00:04<00:22,  2.49it/s] 20%|██        | 14/69 [00:05<00:22,  2.45it/s] 22%|██▏       | 15/69 [00:05<00:23,  2.28it/s] 23%|██▎       | 16/69 [00:05<00:21,  2.52it/s] 25%|██▍       | 17/69 [00:06<00:20,  2.55it/s] 26%|██▌       | 18/69 [00:06<00:21,  2.37it/s] 28%|██▊       | 19/69 [00:07<00:21,  2.29it/s] 29%|██▉       | 20/69 [00:07<00:21,  2.30it/s] 30%|███       | 21/69 [00:08<00:20,  2.30it/s] 32%|███▏      | 22/69 [00:08<00:20,  2.25it/s] 33%|███▎      | 23/69 [00:09<00:20,  2.19it/s] 35%|███▍      | 24/69 [00:09<00:21,  2.13it/s] 36%|███▌      | 25/69 [00:10<00:20,  2.14it/s] 38%|███▊      | 26/69 [00:10<00:20,  2.10it/s] 39%|███▉      | 27/69 [00:11<00:20,  2.05it/s] 41%|████      | 28/69 [00:11<00:19,  2.10it/s] 42%|████▏     | 29/69 [00:11<00:19,  2.09it/s] 43%|████▎     | 30/69 [00:12<00:18,  2.09it/s] 45%|████▍     | 31/69 [00:12<00:17,  2.14it/s] 46%|████▋     | 32/69 [00:13<00:17,  2.10it/s] 48%|████▊     | 33/69 [00:13<00:16,  2.14it/s] 49%|████▉     | 34/69 [00:14<00:16,  2.12it/s] 51%|█████     | 35/69 [00:14<00:16,  2.10it/s] 52%|█████▏    | 36/69 [00:15<00:16,  2.00it/s] 54%|█████▎    | 37/69 [00:15<00:15,  2.05it/s] 55%|█████▌    | 38/69 [00:16<00:15,  2.02it/s] 57%|█████▋    | 39/69 [00:16<00:14,  2.09it/s] 58%|█████▊    | 40/69 [00:17<00:14,  2.02it/s] 59%|█████▉    | 41/69 [00:17<00:13,  2.01it/s] 61%|██████    | 42/69 [00:18<00:13,  1.99it/s] 62%|██████▏   | 43/69 [00:18<00:13,  1.96it/s] 64%|██████▍   | 44/69 [00:19<00:12,  1.98it/s] 65%|██████▌   | 45/69 [00:19<00:12,  1.96it/s] 67%|██████▋   | 46/69 [00:20<00:11,  1.96it/s] 68%|██████▊   | 47/69 [00:20<00:11,  1.93it/s] 70%|██████▉   | 48/69 [00:21<00:10,  1.93it/s] 71%|███████   | 49/69 [00:21<00:09,  2.02it/s] 72%|███████▏  | 50/69 [00:22<00:09,  1.97it/s] 74%|███████▍  | 51/69 [00:22<00:09,  1.94it/s] 75%|███████▌  | 52/69 [00:23<00:08,  1.90it/s] 77%|███████▋  | 53/69 [00:23<00:07,  2.21it/s] 78%|███████▊  | 54/69 [00:24<00:06,  2.46it/s] 80%|███████▉  | 55/69 [00:24<00:05,  2.45it/s] 81%|████████  | 56/69 [00:24<00:04,  2.66it/s] 83%|████████▎ | 57/69 [00:25<00:04,  2.62it/s] 84%|████████▍ | 58/69 [00:25<00:04,  2.71it/s] 86%|████████▌ | 59/69 [00:25<00:03,  2.66it/s] 87%|████████▋ | 60/69 [00:26<00:03,  2.33it/s] 88%|████████▊ | 61/69 [00:26<00:03,  2.17it/s] 90%|████████▉ | 62/69 [00:27<00:03,  2.13it/s] 91%|█████████▏| 63/69 [00:28<00:03,  1.99it/s] 93%|█████████▎| 64/69 [00:28<00:02,  2.01it/s] 94%|█████████▍| 65/69 [00:28<00:01,  2.11it/s] 96%|█████████▌| 66/69 [00:29<00:01,  2.26it/s] 97%|█████████▋| 67/69 [00:29<00:00,  2.24it/s] 99%|█████████▊| 68/69 [00:30<00:00,  2.23it/s]100%|██████████| 69/69 [00:30<00:00,  2.26it/s]100%|██████████| 69/69 [00:30<00:00,  2.25it/s]
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
Setting convergence threshold at 0.00579
Starting iteration 1.
Completed iteration 1.
Starting iteration 10.
Completed iteration 10.
Starting iteration 20.
Completed iteration 20.
Starting iteration 30.
Completed iteration 30.
Converged after 35 iterations.
Done with 100000 cells, trial 1
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  3%|▎         | 2/69 [00:00<00:03, 17.87it/s]  6%|▌         | 4/69 [00:00<00:04, 14.86it/s]  9%|▊         | 6/69 [00:00<00:04, 13.89it/s] 12%|█▏        | 8/69 [00:00<00:04, 13.09it/s] 14%|█▍        | 10/69 [00:00<00:04, 12.26it/s] 17%|█▋        | 12/69 [00:00<00:04, 11.58it/s] 20%|██        | 14/69 [00:01<00:05, 10.89it/s] 23%|██▎       | 16/69 [00:01<00:05, 10.29it/s] 26%|██▌       | 18/69 [00:01<00:05,  9.73it/s] 28%|██▊       | 19/69 [00:01<00:05,  9.45it/s] 29%|██▉       | 20/69 [00:01<00:05,  9.13it/s] 30%|███       | 21/69 [00:01<00:05,  8.81it/s] 32%|███▏      | 22/69 [00:02<00:05,  8.48it/s] 33%|███▎      | 23/69 [00:02<00:05,  8.15it/s] 35%|███▍      | 24/69 [00:02<00:05,  7.82it/s] 36%|███▌      | 25/69 [00:02<00:05,  7.50it/s] 38%|███▊      | 26/69 [00:02<00:05,  7.37it/s] 39%|███▉      | 27/69 [00:02<00:05,  7.16it/s] 41%|████      | 28/69 [00:02<00:05,  6.95it/s] 42%|████▏     | 29/69 [00:03<00:05,  6.81it/s] 43%|████▎     | 30/69 [00:03<00:05,  6.62it/s] 45%|████▍     | 31/69 [00:03<00:05,  6.52it/s] 46%|████▋     | 32/69 [00:03<00:05,  6.37it/s] 48%|████▊     | 33/69 [00:03<00:05,  6.43it/s] 49%|████▉     | 34/69 [00:03<00:05,  6.48it/s] 51%|█████     | 35/69 [00:04<00:05,  6.45it/s] 52%|█████▏    | 36/69 [00:04<00:05,  6.41it/s] 54%|█████▎    | 37/69 [00:04<00:05,  6.38it/s] 55%|█████▌    | 38/69 [00:04<00:04,  6.24it/s] 57%|█████▋    | 39/69 [00:04<00:04,  6.20it/s] 58%|█████▊    | 40/69 [00:04<00:04,  6.14it/s] 59%|█████▉    | 41/69 [00:05<00:04,  6.10it/s] 61%|██████    | 42/69 [00:05<00:04,  6.04it/s] 62%|██████▏   | 43/69 [00:05<00:04,  5.99it/s] 64%|██████▍   | 44/69 [00:05<00:04,  5.83it/s] 65%|██████▌   | 45/69 [00:05<00:04,  5.78it/s] 67%|██████▋   | 46/69 [00:05<00:04,  5.71it/s] 68%|██████▊   | 47/69 [00:06<00:03,  5.64it/s] 70%|██████▉   | 48/69 [00:06<00:03,  5.48it/s] 71%|███████   | 49/69 [00:06<00:03,  5.40it/s] 72%|███████▏  | 50/69 [00:06<00:03,  5.32it/s] 74%|███████▍  | 51/69 [00:06<00:03,  5.24it/s] 75%|███████▌  | 52/69 [00:07<00:03,  5.17it/s] 77%|███████▋  | 53/69 [00:07<00:03,  5.09it/s] 78%|███████▊  | 54/69 [00:07<00:03,  5.00it/s] 80%|███████▉  | 55/69 [00:07<00:02,  4.93it/s] 81%|████████  | 56/69 [00:07<00:02,  4.85it/s] 83%|████████▎ | 57/69 [00:08<00:02,  4.80it/s] 84%|████████▍ | 58/69 [00:08<00:02,  4.74it/s] 86%|████████▌ | 59/69 [00:08<00:02,  4.68it/s] 87%|████████▋ | 60/69 [00:08<00:01,  4.58it/s] 88%|████████▊ | 61/69 [00:09<00:01,  4.47it/s] 90%|████████▉ | 62/69 [00:09<00:01,  4.41it/s] 91%|█████████▏| 63/69 [00:09<00:01,  4.36it/s] 93%|█████████▎| 64/69 [00:09<00:01,  4.29it/s] 94%|█████████▍| 65/69 [00:09<00:00,  4.35it/s] 96%|█████████▌| 66/69 [00:10<00:00,  4.38it/s] 97%|█████████▋| 67/69 [00:10<00:00,  4.41it/s] 99%|█████████▊| 68/69 [00:10<00:00,  4.37it/s]100%|██████████| 69/69 [00:10<00:00,  4.36it/s]100%|██████████| 69/69 [00:10<00:00,  6.33it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:20,  3.26it/s]  3%|▎         | 2/69 [00:00<00:20,  3.21it/s]  4%|▍         | 3/69 [00:00<00:21,  3.12it/s]  6%|▌         | 4/69 [00:01<00:20,  3.22it/s]  7%|▋         | 5/69 [00:01<00:21,  2.99it/s]  9%|▊         | 6/69 [00:02<00:22,  2.83it/s] 10%|█         | 7/69 [00:02<00:22,  2.76it/s] 12%|█▏        | 8/69 [00:02<00:22,  2.67it/s] 13%|█▎        | 9/69 [00:03<00:21,  2.75it/s] 14%|█▍        | 10/69 [00:03<00:22,  2.68it/s] 16%|█▌        | 11/69 [00:03<00:22,  2.59it/s] 17%|█▋        | 12/69 [00:04<00:22,  2.50it/s] 19%|█▉        | 13/69 [00:04<00:22,  2.49it/s] 20%|██        | 14/69 [00:05<00:22,  2.47it/s] 22%|██▏       | 15/69 [00:05<00:22,  2.42it/s] 23%|██▎       | 16/69 [00:06<00:22,  2.38it/s] 25%|██▍       | 17/69 [00:06<00:22,  2.34it/s] 26%|██▌       | 18/69 [00:06<00:22,  2.32it/s] 28%|██▊       | 19/69 [00:07<00:21,  2.28it/s] 29%|██▉       | 20/69 [00:07<00:22,  2.20it/s] 30%|███       | 21/69 [00:08<00:21,  2.22it/s] 32%|███▏      | 22/69 [00:08<00:21,  2.20it/s] 33%|███▎      | 23/69 [00:09<00:20,  2.23it/s] 35%|███▍      | 24/69 [00:09<00:21,  2.12it/s] 36%|███▌      | 25/69 [00:10<00:20,  2.15it/s] 38%|███▊      | 26/69 [00:10<00:19,  2.15it/s] 39%|███▉      | 27/69 [00:11<00:20,  2.10it/s] 41%|████      | 28/69 [00:11<00:19,  2.07it/s] 42%|████▏     | 29/69 [00:12<00:19,  2.03it/s] 43%|████▎     | 30/69 [00:12<00:19,  2.04it/s] 45%|████▍     | 31/69 [00:13<00:18,  2.02it/s] 46%|████▋     | 32/69 [00:13<00:18,  2.04it/s] 48%|████▊     | 33/69 [00:14<00:17,  2.05it/s] 49%|████▉     | 34/69 [00:14<00:17,  2.01it/s] 51%|█████     | 35/69 [00:15<00:17,  1.98it/s] 52%|█████▏    | 36/69 [00:15<00:16,  1.95it/s] 54%|█████▎    | 37/69 [00:16<00:17,  1.86it/s] 55%|█████▌    | 38/69 [00:16<00:16,  1.88it/s] 57%|█████▋    | 39/69 [00:17<00:16,  1.85it/s] 58%|█████▊    | 40/69 [00:17<00:15,  1.84it/s] 59%|█████▉    | 41/69 [00:18<00:15,  1.80it/s] 61%|██████    | 42/69 [00:19<00:15,  1.79it/s] 62%|██████▏   | 43/69 [00:19<00:14,  1.78it/s] 64%|██████▍   | 44/69 [00:20<00:14,  1.71it/s] 65%|██████▌   | 45/69 [00:20<00:14,  1.66it/s] 67%|██████▋   | 46/69 [00:21<00:15,  1.51it/s] 68%|██████▊   | 47/69 [00:22<00:15,  1.45it/s] 70%|██████▉   | 48/69 [00:23<00:14,  1.45it/s] 71%|███████   | 49/69 [00:23<00:12,  1.54it/s] 72%|███████▏  | 50/69 [00:24<00:12,  1.58it/s] 74%|███████▍  | 51/69 [00:24<00:11,  1.59it/s] 75%|███████▌  | 52/69 [00:25<00:10,  1.65it/s] 77%|███████▋  | 53/69 [00:26<00:09,  1.61it/s] 78%|███████▊  | 54/69 [00:26<00:09,  1.56it/s] 80%|███████▉  | 55/69 [00:27<00:09,  1.55it/s] 81%|████████  | 56/69 [00:28<00:08,  1.57it/s] 83%|████████▎ | 57/69 [00:28<00:07,  1.62it/s] 84%|████████▍ | 58/69 [00:29<00:06,  1.67it/s] 86%|████████▌ | 59/69 [00:29<00:06,  1.65it/s] 87%|████████▋ | 60/69 [00:30<00:05,  1.61it/s] 88%|████████▊ | 61/69 [00:31<00:04,  1.71it/s] 90%|████████▉ | 62/69 [00:31<00:04,  1.65it/s] 91%|█████████▏| 63/69 [00:32<00:03,  1.55it/s] 93%|█████████▎| 64/69 [00:33<00:03,  1.54it/s] 94%|█████████▍| 65/69 [00:33<00:02,  1.56it/s] 96%|█████████▌| 66/69 [00:34<00:01,  1.53it/s] 97%|█████████▋| 67/69 [00:35<00:01,  1.54it/s] 99%|█████████▊| 68/69 [00:35<00:00,  1.48it/s]100%|██████████| 69/69 [00:36<00:00,  1.50it/s]100%|██████████| 69/69 [00:36<00:00,  1.89it/s]
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
nohup: ignoring input
findfont: Font family ['Raleway'] not found. Falling back to DejaVu Sans.
findfont: Font family ['Lato'] not found. Falling back to DejaVu Sans.
/data/aparna/aparnakumar/github clone/SEACells/SEACells/cpu.py:524: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.
  self.sparsity_ratios = self.sparsity_ratios.append({"A": A.nnz / (A.shape[0]*A.shape[1]),
nohup: ignoring input
findfont: Font family ['Raleway'] not found. Falling back to DejaVu Sans.
findfont: Font family ['Lato'] not found. Falling back to DejaVu Sans.
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  1%|▏         | 1/69 [00:00<00:07,  9.04it/s]  4%|▍         | 3/69 [00:00<00:06,  9.82it/s]  6%|▌         | 4/69 [00:00<00:06,  9.84it/s]  9%|▊         | 6/69 [00:00<00:06,  9.79it/s] 12%|█▏        | 8/69 [00:00<00:05, 10.21it/s] 14%|█▍        | 10/69 [00:01<00:06,  9.14it/s] 16%|█▌        | 11/69 [00:01<00:06,  8.48it/s] 17%|█▋        | 12/69 [00:01<00:06,  8.32it/s] 19%|█▉        | 13/69 [00:01<00:06,  8.29it/s] 20%|██        | 14/69 [00:01<00:07,  7.68it/s] 22%|██▏       | 15/69 [00:01<00:07,  7.47it/s] 23%|██▎       | 16/69 [00:01<00:07,  7.32it/s] 25%|██▍       | 17/69 [00:02<00:07,  6.99it/s] 26%|██▌       | 18/69 [00:02<00:07,  6.49it/s] 28%|██▊       | 19/69 [00:02<00:07,  6.31it/s] 29%|██▉       | 20/69 [00:02<00:07,  6.18it/s] 30%|███       | 21/69 [00:02<00:08,  5.84it/s] 32%|███▏      | 22/69 [00:02<00:07,  5.96it/s] 33%|███▎      | 23/69 [00:03<00:07,  5.94it/s] 35%|███▍      | 24/69 [00:03<00:08,  5.31it/s] 36%|███▌      | 25/69 [00:03<00:09,  4.43it/s] 38%|███▊      | 26/69 [00:04<00:11,  3.68it/s] 39%|███▉      | 27/69 [00:04<00:11,  3.77it/s] 41%|████      | 28/69 [00:04<00:11,  3.49it/s] 42%|████▏     | 29/69 [00:04<00:10,  3.69it/s] 43%|████▎     | 30/69 [00:05<00:11,  3.41it/s] 45%|████▍     | 31/69 [00:05<00:11,  3.37it/s] 46%|████▋     | 32/69 [00:05<00:10,  3.53it/s] 48%|████▊     | 33/69 [00:06<00:10,  3.35it/s] 49%|████▉     | 34/69 [00:06<00:09,  3.65it/s] 51%|█████     | 35/69 [00:06<00:09,  3.73it/s] 52%|█████▏    | 36/69 [00:06<00:08,  3.74it/s] 54%|█████▎    | 37/69 [00:07<00:08,  3.63it/s] 55%|█████▌    | 38/69 [00:07<00:09,  3.41it/s] 57%|█████▋    | 39/69 [00:07<00:08,  3.54it/s] 58%|█████▊    | 40/69 [00:07<00:07,  3.68it/s] 59%|█████▉    | 41/69 [00:08<00:06,  4.02it/s] 61%|██████    | 42/69 [00:08<00:06,  4.21it/s] 62%|██████▏   | 43/69 [00:08<00:05,  4.42it/s] 64%|██████▍   | 44/69 [00:08<00:05,  4.45it/s] 65%|██████▌   | 45/69 [00:08<00:05,  4.51it/s] 67%|██████▋   | 46/69 [00:09<00:05,  4.55it/s] 68%|██████▊   | 47/69 [00:09<00:05,  4.36it/s] 70%|██████▉   | 48/69 [00:09<00:04,  4.22it/s] 71%|███████   | 49/69 [00:09<00:04,  4.14it/s] 72%|███████▏  | 50/69 [00:10<00:04,  4.12it/s] 74%|███████▍  | 51/69 [00:10<00:04,  4.08it/s] 75%|███████▌  | 52/69 [00:10<00:04,  3.86it/s] 77%|███████▋  | 53/69 [00:10<00:04,  3.97it/s] 78%|███████▊  | 54/69 [00:11<00:03,  4.03it/s] 80%|███████▉  | 55/69 [00:11<00:03,  3.79it/s] 81%|████████  | 56/69 [00:11<00:03,  3.73it/s] 83%|████████▎ | 57/69 [00:12<00:03,  3.53it/s] 84%|████████▍ | 58/69 [00:12<00:03,  3.50it/s] 86%|████████▌ | 59/69 [00:12<00:02,  3.50it/s] 87%|████████▋ | 60/69 [00:13<00:02,  3.45it/s] 88%|████████▊ | 61/69 [00:13<00:02,  3.24it/s] 90%|████████▉ | 62/69 [00:13<00:02,  3.18it/s] 91%|█████████▏| 63/69 [00:13<00:01,  3.24it/s] 93%|█████████▎| 64/69 [00:14<00:01,  3.19it/s] 94%|█████████▍| 65/69 [00:14<00:01,  3.20it/s] 96%|█████████▌| 66/69 [00:14<00:00,  3.13it/s] 97%|█████████▋| 67/69 [00:15<00:00,  2.70it/s] 99%|█████████▊| 68/69 [00:15<00:00,  2.60it/s]100%|██████████| 69/69 [00:16<00:00,  2.46it/s]100%|██████████| 69/69 [00:16<00:00,  4.23it/s]
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  3%|▎         | 2/69 [00:00<00:05, 11.89it/s]  6%|▌         | 4/69 [00:00<00:05, 11.69it/s]  9%|▊         | 6/69 [00:00<00:05, 11.81it/s] 12%|█▏        | 8/69 [00:00<00:05, 11.68it/s] 14%|█▍        | 10/69 [00:00<00:05, 11.40it/s] 17%|█▋        | 12/69 [00:01<00:05, 10.78it/s] 20%|██        | 14/69 [00:01<00:05,  9.85it/s] 23%|██▎       | 16/69 [00:01<00:05,  9.41it/s] 25%|██▍       | 17/69 [00:01<00:05,  9.21it/s] 26%|██▌       | 18/69 [00:01<00:05,  8.92it/s] 28%|██▊       | 19/69 [00:01<00:05,  8.69it/s] 29%|██▉       | 20/69 [00:02<00:05,  8.35it/s] 30%|███       | 21/69 [00:02<00:05,  8.15it/s] 32%|███▏      | 22/69 [00:02<00:05,  7.85it/s] 33%|███▎      | 23/69 [00:02<00:06,  7.61it/s] 35%|███▍      | 24/69 [00:02<00:06,  7.36it/s] 36%|███▌      | 25/69 [00:02<00:06,  7.19it/s] 38%|███▊      | 26/69 [00:02<00:06,  7.05it/s] 39%|███▉      | 27/69 [00:03<00:06,  6.83it/s] 41%|████      | 28/69 [00:03<00:06,  6.62it/s] 42%|████▏     | 29/69 [00:03<00:06,  6.52it/s] 43%|████▎     | 30/69 [00:03<00:06,  6.31it/s] 45%|████▍     | 31/69 [00:03<00:06,  6.11it/s] 46%|████▋     | 32/69 [00:03<00:06,  5.53it/s] 48%|████▊     | 33/69 [00:04<00:06,  5.79it/s] 49%|████▉     | 34/69 [00:04<00:05,  5.89it/s] 51%|█████     | 35/69 [00:04<00:05,  5.94it/s] 52%|█████▏    | 36/69 [00:04<00:05,  5.97it/s] 54%|█████▎    | 37/69 [00:04<00:05,  5.93it/s] 55%|█████▌    | 38/69 [00:04<00:05,  5.93it/s] 57%|█████▋    | 39/69 [00:05<00:05,  5.84it/s] 58%|█████▊    | 40/69 [00:05<00:04,  5.85it/s] 59%|█████▉    | 41/69 [00:05<00:04,  5.81it/s] 61%|██████    | 42/69 [00:05<00:04,  5.68it/s] 62%|██████▏   | 43/69 [00:05<00:04,  5.63it/s] 64%|██████▍   | 44/69 [00:06<00:04,  5.56it/s] 65%|██████▌   | 45/69 [00:06<00:04,  5.44it/s] 67%|██████▋   | 46/69 [00:06<00:04,  5.35it/s] 68%|██████▊   | 47/69 [00:06<00:04,  5.23it/s] 70%|██████▉   | 48/69 [00:06<00:04,  5.12it/s] 71%|███████   | 49/69 [00:06<00:03,  5.10it/s] 72%|███████▏  | 50/69 [00:07<00:03,  4.97it/s] 74%|███████▍  | 51/69 [00:07<00:03,  4.90it/s] 75%|███████▌  | 52/69 [00:07<00:03,  4.80it/s] 77%|███████▋  | 53/69 [00:07<00:03,  4.64it/s] 78%|███████▊  | 54/69 [00:08<00:03,  4.58it/s] 80%|███████▉  | 55/69 [00:08<00:03,  4.51it/s] 81%|████████  | 56/69 [00:08<00:02,  4.34it/s] 83%|████████▎ | 57/69 [00:08<00:02,  4.28it/s] 84%|████████▍ | 58/69 [00:09<00:02,  4.23it/s] 86%|████████▌ | 59/69 [00:09<00:02,  4.18it/s] 87%|████████▋ | 60/69 [00:09<00:02,  4.13it/s] 88%|████████▊ | 61/69 [00:09<00:01,  4.01it/s] 90%|████████▉ | 62/69 [00:10<00:01,  4.00it/s] 91%|█████████▏| 63/69 [00:10<00:01,  3.94it/s] 93%|█████████▎| 64/69 [00:10<00:01,  3.91it/s] 94%|█████████▍| 65/69 [00:10<00:01,  3.96it/s] 96%|█████████▌| 66/69 [00:11<00:00,  3.98it/s] 97%|█████████▋| 67/69 [00:11<00:00,  3.88it/s] 99%|█████████▊| 68/69 [00:11<00:00,  3.89it/s]100%|██████████| 69/69 [00:11<00:00,  3.77it/s]100%|██████████| 69/69 [00:11<00:00,  5.80it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:21,  3.22it/s]  3%|▎         | 2/69 [00:00<00:23,  2.90it/s]  4%|▍         | 3/69 [00:01<00:23,  2.76it/s]  6%|▌         | 4/69 [00:01<00:22,  2.88it/s]  7%|▋         | 5/69 [00:01<00:23,  2.73it/s]  9%|▊         | 6/69 [00:02<00:23,  2.63it/s] 10%|█         | 7/69 [00:02<00:25,  2.46it/s] 12%|█▏        | 8/69 [00:03<00:24,  2.51it/s] 13%|█▎        | 9/69 [00:03<00:24,  2.40it/s] 14%|█▍        | 10/69 [00:03<00:24,  2.40it/s] 16%|█▌        | 11/69 [00:04<00:25,  2.30it/s] 17%|█▋        | 12/69 [00:04<00:25,  2.26it/s] 19%|█▉        | 13/69 [00:05<00:24,  2.25it/s] 20%|██        | 14/69 [00:05<00:22,  2.48it/s] 22%|██▏       | 15/69 [00:05<00:21,  2.55it/s] 23%|██▎       | 16/69 [00:06<00:20,  2.63it/s] 25%|██▍       | 17/69 [00:06<00:20,  2.57it/s] 26%|██▌       | 18/69 [00:07<00:20,  2.54it/s] 28%|██▊       | 19/69 [00:07<00:19,  2.53it/s] 29%|██▉       | 20/69 [00:07<00:18,  2.62it/s] 30%|███       | 21/69 [00:08<00:19,  2.47it/s] 32%|███▏      | 22/69 [00:08<00:19,  2.43it/s] 33%|███▎      | 23/69 [00:09<00:18,  2.47it/s] 35%|███▍      | 24/69 [00:09<00:19,  2.29it/s] 36%|███▌      | 25/69 [00:10<00:19,  2.28it/s] 38%|███▊      | 26/69 [00:10<00:20,  2.11it/s] 39%|███▉      | 27/69 [00:11<00:21,  1.98it/s] 41%|████      | 28/69 [00:11<00:22,  1.86it/s] 42%|████▏     | 29/69 [00:12<00:23,  1.74it/s] 43%|████▎     | 30/69 [00:13<00:22,  1.70it/s] 45%|████▍     | 31/69 [00:13<00:22,  1.69it/s] 46%|████▋     | 32/69 [00:14<00:22,  1.64it/s] 48%|████▊     | 33/69 [00:15<00:23,  1.50it/s] 49%|████▉     | 34/69 [00:15<00:23,  1.49it/s] 51%|█████     | 35/69 [00:16<00:21,  1.55it/s] 52%|█████▏    | 36/69 [00:16<00:20,  1.64it/s] 54%|█████▎    | 37/69 [00:17<00:18,  1.71it/s] 55%|█████▌    | 38/69 [00:18<00:19,  1.58it/s] 57%|█████▋    | 39/69 [00:18<00:18,  1.60it/s] 58%|█████▊    | 40/69 [00:19<00:19,  1.52it/s] 59%|█████▉    | 41/69 [00:20<00:18,  1.53it/s] 61%|██████    | 42/69 [00:21<00:19,  1.41it/s] 62%|██████▏   | 43/69 [00:21<00:17,  1.52it/s] 64%|██████▍   | 44/69 [00:22<00:16,  1.48it/s] 65%|██████▌   | 45/69 [00:22<00:15,  1.50it/s] 67%|██████▋   | 46/69 [00:23<00:15,  1.48it/s] 68%|██████▊   | 47/69 [00:24<00:14,  1.56it/s] 70%|██████▉   | 48/69 [00:24<00:13,  1.59it/s] 71%|███████   | 49/69 [00:25<00:13,  1.51it/s] 72%|███████▏  | 50/69 [00:26<00:12,  1.53it/s] 74%|███████▍  | 51/69 [00:26<00:12,  1.48it/s] 75%|███████▌  | 52/69 [00:27<00:11,  1.45it/s] 77%|███████▋  | 53/69 [00:28<00:10,  1.58it/s] 78%|███████▊  | 54/69 [00:28<00:09,  1.56it/s] 80%|███████▉  | 55/69 [00:29<00:08,  1.62it/s] 81%|████████  | 56/69 [00:30<00:08,  1.59it/s] 83%|████████▎ | 57/69 [00:30<00:07,  1.63it/s] 84%|████████▍ | 58/69 [00:31<00:06,  1.58it/s] 86%|████████▌ | 59/69 [00:31<00:06,  1.56it/s] 87%|████████▋ | 60/69 [00:32<00:05,  1.57it/s] 88%|████████▊ | 61/69 [00:33<00:04,  1.60it/s] 90%|████████▉ | 62/69 [00:33<00:04,  1.56it/s] 91%|█████████▏| 63/69 [00:34<00:04,  1.44it/s] 93%|█████████▎| 64/69 [00:35<00:03,  1.32it/s] 94%|█████████▍| 65/69 [00:36<00:02,  1.33it/s] 96%|█████████▌| 66/69 [00:37<00:02,  1.28it/s] 97%|█████████▋| 67/69 [00:38<00:01,  1.23it/s] 99%|█████████▊| 68/69 [00:38<00:00,  1.25it/s]100%|██████████| 69/69 [00:39<00:00,  1.20it/s]100%|██████████| 69/69 [00:39<00:00,  1.74it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:15,  4.26it/s]  3%|▎         | 2/69 [00:00<00:18,  3.56it/s]  4%|▍         | 3/69 [00:00<00:20,  3.29it/s]  6%|▌         | 4/69 [00:01<00:21,  3.03it/s]  7%|▋         | 5/69 [00:01<00:22,  2.79it/s]  9%|▊         | 6/69 [00:02<00:24,  2.61it/s] 10%|█         | 7/69 [00:02<00:24,  2.51it/s] 12%|█▏        | 8/69 [00:02<00:24,  2.50it/s] 13%|█▎        | 9/69 [00:03<00:23,  2.55it/s] 14%|█▍        | 10/69 [00:03<00:23,  2.47it/s] 16%|█▌        | 11/69 [00:04<00:23,  2.48it/s] 17%|█▋        | 12/69 [00:04<00:24,  2.37it/s] 19%|█▉        | 13/69 [00:05<00:24,  2.28it/s] 20%|██        | 14/69 [00:05<00:23,  2.33it/s] 22%|██▏       | 15/69 [00:05<00:23,  2.25it/s] 23%|██▎       | 16/69 [00:06<00:24,  2.14it/s] 25%|██▍       | 17/69 [00:07<00:25,  2.07it/s] 26%|██▌       | 18/69 [00:07<00:25,  1.96it/s] 28%|██▊       | 19/69 [00:08<00:26,  1.90it/s] 29%|██▉       | 20/69 [00:08<00:27,  1.78it/s] 30%|███       | 21/69 [00:09<00:27,  1.75it/s] 32%|███▏      | 22/69 [00:09<00:26,  1.75it/s] 33%|███▎      | 23/69 [00:10<00:27,  1.66it/s] 35%|███▍      | 24/69 [00:11<00:27,  1.61it/s] 36%|███▌      | 25/69 [00:11<00:27,  1.61it/s] 38%|███▊      | 26/69 [00:12<00:26,  1.62it/s] 39%|███▉      | 27/69 [00:13<00:26,  1.58it/s] 41%|████      | 28/69 [00:13<00:25,  1.60it/s] 42%|████▏     | 29/69 [00:14<00:24,  1.65it/s] 43%|████▎     | 30/69 [00:14<00:20,  1.91it/s] 45%|████▍     | 31/69 [00:15<00:19,  1.95it/s] 46%|████▋     | 32/69 [00:15<00:18,  1.95it/s] 48%|████▊     | 33/69 [00:16<00:17,  2.06it/s] 49%|████▉     | 34/69 [00:16<00:18,  1.91it/s] 51%|█████     | 35/69 [00:17<00:17,  1.93it/s] 52%|█████▏    | 36/69 [00:17<00:17,  1.92it/s] 54%|█████▎    | 37/69 [00:18<00:16,  1.91it/s] 55%|█████▌    | 38/69 [00:18<00:16,  1.83it/s] 57%|█████▋    | 39/69 [00:19<00:15,  1.88it/s] 58%|█████▊    | 40/69 [00:19<00:15,  1.82it/s] 59%|█████▉    | 41/69 [00:20<00:15,  1.76it/s] 61%|██████    | 42/69 [00:21<00:15,  1.75it/s] 62%|██████▏   | 43/69 [00:21<00:14,  1.80it/s] 64%|██████▍   | 44/69 [00:22<00:14,  1.75it/s] 65%|██████▌   | 45/69 [00:22<00:13,  1.74it/s] 67%|██████▋   | 46/69 [00:23<00:13,  1.75it/s] 68%|██████▊   | 47/69 [00:23<00:12,  1.78it/s] 70%|██████▉   | 48/69 [00:24<00:12,  1.75it/s] 71%|███████   | 49/69 [00:25<00:11,  1.80it/s] 72%|███████▏  | 50/69 [00:25<00:10,  1.79it/s] 74%|███████▍  | 51/69 [00:26<00:09,  1.82it/s] 75%|███████▌  | 52/69 [00:26<00:09,  1.85it/s] 77%|███████▋  | 53/69 [00:27<00:08,  1.89it/s] 78%|███████▊  | 54/69 [00:27<00:07,  1.93it/s] 80%|███████▉  | 55/69 [00:28<00:07,  1.97it/s] 81%|████████  | 56/69 [00:28<00:06,  1.87it/s] 83%|████████▎ | 57/69 [00:29<00:06,  1.72it/s] 84%|████████▍ | 58/69 [00:30<00:06,  1.61it/s] 86%|████████▌ | 59/69 [00:31<00:07,  1.37it/s] 87%|████████▋ | 60/69 [00:31<00:06,  1.43it/s] 88%|████████▊ | 61/69 [00:32<00:05,  1.45it/s] 90%|████████▉ | 62/69 [00:33<00:04,  1.49it/s] 91%|█████████▏| 63/69 [00:33<00:03,  1.52it/s] 93%|█████████▎| 64/69 [00:34<00:03,  1.43it/s] 94%|█████████▍| 65/69 [00:35<00:02,  1.34it/s] 96%|█████████▌| 66/69 [00:36<00:02,  1.31it/s] 97%|█████████▋| 67/69 [00:37<00:01,  1.25it/s] 99%|█████████▊| 68/69 [00:37<00:00,  1.22it/s]100%|██████████| 69/69 [00:38<00:00,  1.16it/s]100%|██████████| 69/69 [00:38<00:00,  1.77it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
Setting convergence threshold at 0.00579
Starting iteration 1.
Completed iteration 1.
Starting iteration 10.
Completed iteration 10.
Starting iteration 20.
Completed iteration 20.
Starting iteration 30.
Completed iteration 30.
Converged after 35 iterations.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:16,  4.00it/s]  3%|▎         | 2/69 [00:00<00:20,  3.28it/s]  4%|▍         | 3/69 [00:00<00:20,  3.24it/s]  6%|▌         | 4/69 [00:01<00:18,  3.54it/s]  7%|▋         | 5/69 [00:01<00:21,  3.05it/s]  9%|▊         | 6/69 [00:01<00:20,  3.08it/s] 10%|█         | 7/69 [00:02<00:21,  2.86it/s] 12%|█▏        | 8/69 [00:02<00:22,  2.71it/s] 13%|█▎        | 9/69 [00:03<00:22,  2.70it/s] 14%|█▍        | 10/69 [00:03<00:21,  2.79it/s] 16%|█▌        | 11/69 [00:03<00:22,  2.57it/s] 17%|█▋        | 12/69 [00:04<00:23,  2.43it/s] 19%|█▉        | 13/69 [00:04<00:24,  2.29it/s] 20%|██        | 14/69 [00:05<00:23,  2.29it/s] 22%|██▏       | 15/69 [00:05<00:24,  2.22it/s] 23%|██▎       | 16/69 [00:06<00:25,  2.07it/s] 25%|██▍       | 17/69 [00:06<00:25,  2.03it/s] 26%|██▌       | 18/69 [00:07<00:26,  1.89it/s] 28%|██▊       | 19/69 [00:07<00:24,  2.00it/s] 29%|██▉       | 20/69 [00:08<00:24,  1.99it/s] 30%|███       | 21/69 [00:08<00:23,  2.04it/s] 32%|███▏      | 22/69 [00:09<00:22,  2.10it/s] 33%|███▎      | 23/69 [00:09<00:21,  2.10it/s] 35%|███▍      | 24/69 [00:10<00:21,  2.13it/s] 36%|███▌      | 25/69 [00:10<00:20,  2.15it/s] 38%|███▊      | 26/69 [00:11<00:19,  2.16it/s] 39%|███▉      | 27/69 [00:11<00:20,  2.09it/s] 41%|████      | 28/69 [00:12<00:19,  2.12it/s] 42%|████▏     | 29/69 [00:12<00:19,  2.05it/s] 43%|████▎     | 30/69 [00:13<00:19,  2.02it/s] 45%|████▍     | 31/69 [00:13<00:18,  2.01it/s] 46%|████▋     | 32/69 [00:14<00:19,  1.94it/s] 48%|████▊     | 33/69 [00:14<00:18,  1.96it/s] 49%|████▉     | 34/69 [00:15<00:17,  1.98it/s] 51%|█████     | 35/69 [00:15<00:17,  1.90it/s] 52%|█████▏    | 36/69 [00:16<00:17,  1.84it/s] 54%|█████▎    | 37/69 [00:16<00:17,  1.84it/s] 55%|█████▌    | 38/69 [00:17<00:16,  1.85it/s] 57%|█████▋    | 39/69 [00:18<00:16,  1.77it/s] 58%|█████▊    | 40/69 [00:18<00:16,  1.74it/s] 59%|█████▉    | 41/69 [00:19<00:16,  1.72it/s] 61%|██████    | 42/69 [00:19<00:15,  1.76it/s] 62%|██████▏   | 43/69 [00:20<00:14,  1.76it/s] 64%|██████▍   | 44/69 [00:20<00:14,  1.77it/s] 65%|██████▌   | 45/69 [00:21<00:13,  1.72it/s] 67%|██████▋   | 46/69 [00:22<00:13,  1.70it/s] 68%|██████▊   | 47/69 [00:22<00:13,  1.65it/s] 70%|██████▉   | 48/69 [00:23<00:12,  1.65it/s] 71%|███████   | 49/69 [00:23<00:11,  1.71it/s] 72%|███████▏  | 50/69 [00:24<00:11,  1.68it/s] 74%|███████▍  | 51/69 [00:25<00:11,  1.64it/s] 75%|███████▌  | 52/69 [00:25<00:09,  1.73it/s] 77%|███████▋  | 53/69 [00:26<00:08,  1.84it/s] 78%|███████▊  | 54/69 [00:26<00:07,  1.94it/s] 80%|███████▉  | 55/69 [00:27<00:06,  2.01it/s] 81%|████████  | 56/69 [00:27<00:06,  1.98it/s] 83%|████████▎ | 57/69 [00:28<00:06,  1.84it/s] 84%|████████▍ | 58/69 [00:28<00:06,  1.79it/s] 86%|████████▌ | 59/69 [00:29<00:05,  1.72it/s] 87%|████████▋ | 60/69 [00:30<00:05,  1.60it/s] 88%|████████▊ | 61/69 [00:30<00:04,  1.62it/s] 90%|████████▉ | 62/69 [00:31<00:03,  1.76it/s] 91%|█████████▏| 63/69 [00:31<00:03,  1.91it/s] 93%|█████████▎| 64/69 [00:32<00:02,  1.84it/s] 94%|█████████▍| 65/69 [00:32<00:02,  1.77it/s] 96%|█████████▌| 66/69 [00:33<00:01,  1.67it/s] 97%|█████████▋| 67/69 [00:34<00:01,  1.65it/s] 99%|█████████▊| 68/69 [00:34<00:00,  1.66it/s]100%|██████████| 69/69 [00:35<00:00,  1.59it/s]100%|██████████| 69/69 [00:35<00:00,  1.95it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
Setting convergence threshold at 0.00579
Starting iteration 1.
Completed iteration 1.
Starting iteration 10.
Completed iteration 10.
Starting iteration 20.
Completed iteration 20.
Starting iteration 30.
Completed iteration 30.
Converged after 35 iterations.
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  3%|▎         | 2/69 [00:00<00:03, 17.44it/s]  6%|▌         | 4/69 [00:00<00:04, 14.17it/s]  9%|▊         | 6/69 [00:00<00:04, 13.01it/s] 12%|█▏        | 8/69 [00:00<00:04, 12.46it/s] 14%|█▍        | 10/69 [00:00<00:04, 11.81it/s] 17%|█▋        | 12/69 [00:00<00:05, 11.18it/s] 20%|██        | 14/69 [00:01<00:05, 10.55it/s] 23%|██▎       | 16/69 [00:01<00:05, 10.02it/s] 26%|██▌       | 18/69 [00:01<00:05,  9.52it/s] 28%|██▊       | 19/69 [00:01<00:05,  9.22it/s] 29%|██▉       | 20/69 [00:01<00:05,  8.95it/s] 30%|███       | 21/69 [00:02<00:05,  8.66it/s] 32%|███▏      | 22/69 [00:02<00:05,  8.38it/s] 33%|███▎      | 23/69 [00:02<00:05,  8.13it/s] 35%|███▍      | 24/69 [00:02<00:05,  7.87it/s] 36%|███▌      | 25/69 [00:02<00:05,  7.64it/s] 38%|███▊      | 26/69 [00:02<00:05,  7.42it/s] 39%|███▉      | 27/69 [00:02<00:05,  7.22it/s] 41%|████      | 28/69 [00:03<00:05,  7.05it/s] 42%|████▏     | 29/69 [00:03<00:05,  6.90it/s] 43%|████▎     | 30/69 [00:03<00:05,  6.68it/s] 45%|████▍     | 31/69 [00:03<00:05,  6.54it/s] 46%|████▋     | 32/69 [00:03<00:05,  6.35it/s] 48%|████▊     | 33/69 [00:03<00:05,  6.48it/s] 49%|████▉     | 34/69 [00:03<00:05,  6.49it/s] 51%|█████     | 35/69 [00:04<00:05,  6.44it/s] 52%|█████▏    | 36/69 [00:04<00:05,  6.45it/s] 54%|█████▎    | 37/69 [00:04<00:04,  6.43it/s] 55%|█████▌    | 38/69 [00:04<00:04,  6.30it/s] 57%|█████▋    | 39/69 [00:04<00:04,  6.29it/s] 58%|█████▊    | 40/69 [00:04<00:04,  6.15it/s] 59%|█████▉    | 41/69 [00:05<00:04,  6.05it/s] 61%|██████    | 42/69 [00:05<00:04,  5.97it/s] 62%|██████▏   | 43/69 [00:05<00:04,  5.95it/s] 64%|██████▍   | 44/69 [00:05<00:04,  5.84it/s] 65%|██████▌   | 45/69 [00:05<00:04,  5.71it/s] 67%|██████▋   | 46/69 [00:05<00:04,  5.67it/s] 68%|██████▊   | 47/69 [00:06<00:03,  5.57it/s] 70%|██████▉   | 48/69 [00:06<00:03,  5.42it/s] 71%|███████   | 49/69 [00:06<00:03,  5.35it/s] 72%|███████▏  | 50/69 [00:06<00:03,  5.26it/s] 74%|███████▍  | 51/69 [00:06<00:03,  5.19it/s] 75%|███████▌  | 52/69 [00:07<00:03,  5.12it/s] 77%|███████▋  | 53/69 [00:07<00:03,  5.05it/s] 78%|███████▊  | 54/69 [00:07<00:03,  4.99it/s] 80%|███████▉  | 55/69 [00:07<00:02,  4.93it/s] 81%|████████  | 56/69 [00:07<00:02,  4.86it/s] 83%|████████▎ | 57/69 [00:08<00:02,  4.77it/s] 84%|████████▍ | 58/69 [00:08<00:02,  4.71it/s] 86%|████████▌ | 59/69 [00:08<00:02,  4.61it/s] 87%|████████▋ | 60/69 [00:08<00:01,  4.58it/s] 88%|████████▊ | 61/69 [00:09<00:01,  4.51it/s] 90%|████████▉ | 62/69 [00:09<00:01,  4.43it/s] 91%|█████████▏| 63/69 [00:09<00:01,  4.34it/s] 93%|█████████▎| 64/69 [00:09<00:01,  4.30it/s] 94%|█████████▍| 65/69 [00:10<00:00,  4.34it/s] 96%|█████████▌| 66/69 [00:10<00:00,  4.33it/s] 97%|█████████▋| 67/69 [00:10<00:00,  4.33it/s] 99%|█████████▊| 68/69 [00:10<00:00,  4.34it/s]100%|██████████| 69/69 [00:10<00:00,  4.30it/s]100%|██████████| 69/69 [00:10<00:00,  6.28it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:18,  3.77it/s]  3%|▎         | 2/69 [00:00<00:19,  3.41it/s]  4%|▍         | 3/69 [00:00<00:20,  3.29it/s]  6%|▌         | 4/69 [00:01<00:19,  3.38it/s]  7%|▋         | 5/69 [00:01<00:20,  3.17it/s]  9%|▊         | 6/69 [00:01<00:21,  2.93it/s] 10%|█         | 7/69 [00:02<00:21,  2.86it/s] 12%|█▏        | 8/69 [00:02<00:22,  2.67it/s] 13%|█▎        | 9/69 [00:03<00:22,  2.68it/s] 14%|█▍        | 10/69 [00:03<00:21,  2.69it/s] 16%|█▌        | 11/69 [00:03<00:22,  2.53it/s] 17%|█▋        | 12/69 [00:04<00:22,  2.49it/s] 19%|█▉        | 13/69 [00:04<00:22,  2.53it/s] 20%|██        | 14/69 [00:05<00:22,  2.46it/s] 22%|██▏       | 15/69 [00:05<00:22,  2.44it/s] 23%|██▎       | 16/69 [00:05<00:21,  2.43it/s] 25%|██▍       | 17/69 [00:06<00:21,  2.43it/s] 26%|██▌       | 18/69 [00:06<00:20,  2.44it/s] 28%|██▊       | 19/69 [00:07<00:19,  2.51it/s] 29%|██▉       | 20/69 [00:07<00:18,  2.62it/s] 30%|███       | 21/69 [00:07<00:18,  2.59it/s] 32%|███▏      | 22/69 [00:08<00:18,  2.53it/s] 33%|███▎      | 23/69 [00:08<00:18,  2.46it/s] 35%|███▍      | 24/69 [00:09<00:18,  2.44it/s] 36%|███▌      | 25/69 [00:09<00:21,  2.04it/s] 38%|███▊      | 26/69 [00:10<00:21,  2.00it/s] 39%|███▉      | 27/69 [00:10<00:20,  2.07it/s] 41%|████      | 28/69 [00:11<00:19,  2.12it/s] 42%|████▏     | 29/69 [00:11<00:19,  2.06it/s] 43%|████▎     | 30/69 [00:12<00:18,  2.10it/s] 45%|████▍     | 31/69 [00:12<00:17,  2.14it/s] 46%|████▋     | 32/69 [00:13<00:17,  2.17it/s] 48%|████▊     | 33/69 [00:13<00:17,  2.07it/s] 49%|████▉     | 34/69 [00:14<00:16,  2.07it/s] 51%|█████     | 35/69 [00:14<00:17,  1.96it/s] 52%|█████▏    | 36/69 [00:15<00:15,  2.08it/s] 54%|█████▎    | 37/69 [00:15<00:15,  2.08it/s] 55%|█████▌    | 38/69 [00:16<00:15,  1.95it/s] 57%|█████▋    | 39/69 [00:16<00:15,  1.94it/s] 58%|█████▊    | 40/69 [00:17<00:15,  1.91it/s] 59%|█████▉    | 41/69 [00:17<00:15,  1.83it/s] 61%|██████    | 42/69 [00:18<00:14,  1.87it/s] 62%|██████▏   | 43/69 [00:18<00:13,  1.89it/s] 64%|██████▍   | 44/69 [00:19<00:15,  1.65it/s] 65%|██████▌   | 45/69 [00:20<00:14,  1.65it/s] 67%|██████▋   | 46/69 [00:20<00:13,  1.75it/s] 68%|██████▊   | 47/69 [00:21<00:12,  1.74it/s] 70%|██████▉   | 48/69 [00:21<00:12,  1.67it/s] 71%|███████   | 49/69 [00:22<00:12,  1.62it/s] 72%|███████▏  | 50/69 [00:23<00:11,  1.62it/s] 74%|███████▍  | 51/69 [00:23<00:10,  1.65it/s] 75%|███████▌  | 52/69 [00:24<00:10,  1.63it/s] 77%|███████▋  | 53/69 [00:24<00:09,  1.72it/s] 78%|███████▊  | 54/69 [00:25<00:08,  1.74it/s] 80%|███████▉  | 55/69 [00:26<00:08,  1.58it/s] 81%|████████  | 56/69 [00:26<00:08,  1.59it/s] 83%|████████▎ | 57/69 [00:27<00:07,  1.60it/s] 84%|████████▍ | 58/69 [00:28<00:06,  1.64it/s] 86%|████████▌ | 59/69 [00:28<00:05,  1.67it/s] 87%|████████▋ | 60/69 [00:29<00:05,  1.62it/s] 88%|████████▊ | 61/69 [00:29<00:04,  1.64it/s] 90%|████████▉ | 62/69 [00:30<00:04,  1.41it/s] 91%|█████████▏| 63/69 [00:31<00:04,  1.46it/s] 93%|█████████▎| 64/69 [00:32<00:03,  1.52it/s] 94%|█████████▍| 65/69 [00:32<00:02,  1.48it/s] 96%|█████████▌| 66/69 [00:33<00:02,  1.25it/s] 97%|█████████▋| 67/69 [00:34<00:01,  1.30it/s] 99%|█████████▊| 68/69 [00:35<00:00,  1.36it/s]100%|██████████| 69/69 [00:35<00:00,  1.38it/s]100%|██████████| 69/69 [00:35<00:00,  1.92it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
Setting convergence threshold at 0.00579
Starting iteration 1.
Completed iteration 1.
Starting iteration 10.
Completed iteration 10.
Starting iteration 20.
Completed iteration 20.
Starting iteration 30.
Completed iteration 30.
Converged after 35 iterations.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:19,  3.45it/s]  3%|▎         | 2/69 [00:00<00:24,  2.76it/s]  4%|▍         | 3/69 [00:01<00:24,  2.71it/s]  6%|▌         | 4/69 [00:01<00:24,  2.70it/s]  7%|▋         | 5/69 [00:01<00:24,  2.61it/s]  9%|▊         | 6/69 [00:02<00:25,  2.50it/s] 10%|█         | 7/69 [00:02<00:23,  2.62it/s] 12%|█▏        | 8/69 [00:03<00:23,  2.57it/s] 13%|█▎        | 9/69 [00:03<00:23,  2.58it/s] 14%|█▍        | 10/69 [00:03<00:23,  2.47it/s] 16%|█▌        | 11/69 [00:04<00:24,  2.35it/s] 17%|█▋        | 12/69 [00:04<00:22,  2.52it/s] 19%|█▉        | 13/69 [00:05<00:23,  2.43it/s] 20%|██        | 14/69 [00:05<00:23,  2.31it/s] 22%|██▏       | 15/69 [00:05<00:22,  2.40it/s] 23%|██▎       | 16/69 [00:06<00:20,  2.53it/s] 25%|██▍       | 17/69 [00:06<00:21,  2.37it/s] 26%|██▌       | 18/69 [00:07<00:20,  2.46it/s] 28%|██▊       | 19/69 [00:07<00:20,  2.38it/s] 29%|██▉       | 20/69 [00:08<00:21,  2.32it/s] 30%|███       | 21/69 [00:08<00:20,  2.31it/s] 32%|███▏      | 22/69 [00:08<00:20,  2.32it/s] 33%|███▎      | 23/69 [00:09<00:20,  2.25it/s] 35%|███▍      | 24/69 [00:09<00:21,  2.11it/s] 36%|███▌      | 25/69 [00:10<00:20,  2.14it/s] 38%|███▊      | 26/69 [00:10<00:19,  2.22it/s] 39%|███▉      | 27/69 [00:11<00:20,  2.10it/s] 41%|████      | 28/69 [00:11<00:20,  2.02it/s] 42%|████▏     | 29/69 [00:12<00:20,  1.97it/s] 43%|████▎     | 30/69 [00:12<00:20,  1.95it/s] 45%|████▍     | 31/69 [00:13<00:20,  1.87it/s] 46%|████▋     | 32/69 [00:14<00:19,  1.87it/s] 48%|████▊     | 33/69 [00:14<00:18,  1.91it/s] 49%|████▉     | 34/69 [00:15<00:19,  1.83it/s] 51%|█████     | 35/69 [00:15<00:19,  1.78it/s] 52%|█████▏    | 36/69 [00:16<00:19,  1.73it/s] 54%|█████▎    | 37/69 [00:17<00:18,  1.70it/s] 55%|█████▌    | 38/69 [00:17<00:17,  1.73it/s] 57%|█████▋    | 39/69 [00:18<00:16,  1.77it/s] 58%|█████▊    | 40/69 [00:18<00:16,  1.80it/s] 59%|█████▉    | 41/69 [00:19<00:15,  1.85it/s] 61%|██████    | 42/69 [00:19<00:14,  1.86it/s] 62%|██████▏   | 43/69 [00:20<00:13,  1.87it/s] 64%|██████▍   | 44/69 [00:20<00:13,  1.85it/s] 65%|██████▌   | 45/69 [00:21<00:13,  1.81it/s] 67%|██████▋   | 46/69 [00:21<00:12,  1.80it/s] 68%|██████▊   | 47/69 [00:22<00:12,  1.81it/s] 70%|██████▉   | 48/69 [00:23<00:11,  1.80it/s] 71%|███████   | 49/69 [00:23<00:11,  1.79it/s] 72%|███████▏  | 50/69 [00:24<00:10,  1.79it/s] 74%|███████▍  | 51/69 [00:24<00:10,  1.78it/s] 75%|███████▌  | 52/69 [00:25<00:09,  1.76it/s] 77%|███████▋  | 53/69 [00:25<00:09,  1.76it/s] 78%|███████▊  | 54/69 [00:26<00:08,  1.73it/s] 80%|███████▉  | 55/69 [00:27<00:08,  1.68it/s] 81%|████████  | 56/69 [00:27<00:08,  1.62it/s] 83%|████████▎ | 57/69 [00:28<00:07,  1.60it/s] 84%|████████▍ | 58/69 [00:29<00:07,  1.54it/s] 86%|████████▌ | 59/69 [00:29<00:06,  1.52it/s] 87%|████████▋ | 60/69 [00:30<00:05,  1.56it/s] 88%|████████▊ | 61/69 [00:31<00:05,  1.57it/s] 90%|████████▉ | 62/69 [00:31<00:04,  1.54it/s] 91%|█████████▏| 63/69 [00:32<00:04,  1.49it/s] 93%|█████████▎| 64/69 [00:33<00:03,  1.50it/s] 94%|█████████▍| 65/69 [00:33<00:02,  1.49it/s] 96%|█████████▌| 66/69 [00:34<00:02,  1.47it/s] 97%|█████████▋| 67/69 [00:35<00:01,  1.48it/s] 99%|█████████▊| 68/69 [00:35<00:00,  1.49it/s]100%|██████████| 69/69 [00:36<00:00,  1.48it/s]100%|██████████| 69/69 [00:36<00:00,  1.89it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
Setting convergence threshold at 0.00579
Starting iteration 1.
Completed iteration 1.
Starting iteration 10.
Completed iteration 10.
Starting iteration 20.
Completed iteration 20.
Starting iteration 30.
Completed iteration 30.
Converged after 35 iterations.
Done with 100000 cells, trial 1
SPARSE AND GPU
TRYING SEACellsGPU
Welcome to SEACells GPU!
build_graph.SEACellGraph completed
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]/home/aparna/miniconda3/lib/python3.9/site-packages/cupyx/scipy/sparse/_compressed.py:545: SparseEfficiencyWarning: Changing the sparsity structure of a csr_matrix is expensive.
  warnings.warn('Changing the sparsity structure of a '
  3%|▎         | 2/69 [00:00<00:03, 17.00it/s]  6%|▌         | 4/69 [00:00<00:04, 14.16it/s]  9%|▊         | 6/69 [00:00<00:04, 13.31it/s] 12%|█▏        | 8/69 [00:00<00:04, 12.64it/s] 14%|█▍        | 10/69 [00:00<00:04, 12.01it/s] 17%|█▋        | 12/69 [00:00<00:05, 11.30it/s] 20%|██        | 14/69 [00:01<00:05, 10.65it/s] 23%|██▎       | 16/69 [00:01<00:05, 10.11it/s] 26%|██▌       | 18/69 [00:01<00:05,  9.54it/s] 28%|██▊       | 19/69 [00:01<00:05,  9.27it/s] 29%|██▉       | 20/69 [00:01<00:05,  8.99it/s] 30%|███       | 21/69 [00:02<00:05,  8.66it/s] 32%|███▏      | 22/69 [00:02<00:05,  8.36it/s] 33%|███▎      | 23/69 [00:02<00:05,  8.01it/s] 35%|███▍      | 24/69 [00:02<00:05,  7.76it/s] 36%|███▌      | 25/69 [00:02<00:05,  7.46it/s] 38%|███▊      | 26/69 [00:02<00:05,  7.25it/s] 39%|███▉      | 27/69 [00:02<00:05,  7.09it/s] 41%|████      | 28/69 [00:03<00:05,  6.91it/s] 42%|████▏     | 29/69 [00:03<00:05,  6.72it/s] 43%|████▎     | 30/69 [00:03<00:05,  6.53it/s] 45%|████▍     | 31/69 [00:03<00:05,  6.37it/s] 46%|████▋     | 32/69 [00:03<00:05,  6.23it/s] 48%|████▊     | 33/69 [00:03<00:05,  6.34it/s] 49%|████▉     | 34/69 [00:03<00:05,  6.41it/s] 51%|█████     | 35/69 [00:04<00:05,  6.41it/s] 52%|█████▏    | 36/69 [00:04<00:05,  6.41it/s] 54%|█████▎    | 37/69 [00:04<00:05,  6.31it/s] 55%|█████▌    | 38/69 [00:04<00:05,  6.20it/s] 57%|█████▋    | 39/69 [00:04<00:04,  6.15it/s] 58%|█████▊    | 40/69 [00:04<00:04,  6.10it/s] 59%|█████▉    | 41/69 [00:05<00:04,  6.03it/s] 61%|██████    | 42/69 [00:05<00:04,  6.01it/s] 62%|██████▏   | 43/69 [00:05<00:04,  5.95it/s] 64%|██████▍   | 44/69 [00:05<00:04,  5.86it/s] 65%|██████▌   | 45/69 [00:05<00:04,  5.72it/s] 67%|██████▋   | 46/69 [00:06<00:04,  5.61it/s] 68%|██████▊   | 47/69 [00:06<00:04,  5.47it/s] 70%|██████▉   | 48/69 [00:06<00:04,  4.99it/s] 71%|███████   | 49/69 [00:06<00:03,  5.06it/s] 72%|███████▏  | 50/69 [00:06<00:03,  5.06it/s] 74%|███████▍  | 51/69 [00:07<00:03,  5.03it/s] 75%|███████▌  | 52/69 [00:07<00:03,  5.03it/s] 77%|███████▋  | 53/69 [00:07<00:03,  4.96it/s] 78%|███████▊  | 54/69 [00:07<00:03,  4.89it/s] 80%|███████▉  | 55/69 [00:07<00:02,  4.84it/s] 81%|████████  | 56/69 [00:08<00:02,  4.78it/s] 83%|████████▎ | 57/69 [00:08<00:02,  4.70it/s] 84%|████████▍ | 58/69 [00:08<00:02,  4.64it/s] 86%|████████▌ | 59/69 [00:08<00:02,  4.58it/s] 87%|████████▋ | 60/69 [00:09<00:02,  4.48it/s] 88%|████████▊ | 61/69 [00:09<00:01,  4.40it/s] 90%|████████▉ | 62/69 [00:09<00:01,  4.36it/s] 91%|█████████▏| 63/69 [00:09<00:01,  4.30it/s] 93%|█████████▎| 64/69 [00:09<00:01,  4.25it/s] 94%|█████████▍| 65/69 [00:10<00:00,  4.29it/s] 96%|█████████▌| 66/69 [00:10<00:00,  4.34it/s] 97%|█████████▋| 67/69 [00:10<00:00,  4.36it/s] 99%|█████████▊| 68/69 [00:10<00:00,  4.34it/s]100%|██████████| 69/69 [00:11<00:00,  4.31it/s]100%|██████████| 69/69 [00:11<00:00,  6.21it/s]
Selecting 59 cells from greedy initialization.
Randomly initialized A matrix.
SPARSE AND NOT GPU
TRYING SEACellsCPU
Welcome to SEACells!
Computing kNN graph using scanpy NN ...
Computing radius for adaptive bandwidth kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Making graph symmetric...
Parameter graph_construction = union being used to build KNN graph...
Computing RBF kernel...
  0%|          | 0/100000 [00:00<?, ?it/s]
Building similarity LIL matrix...
  0%|          | 0/100000 [00:00<?, ?it/s]
Constructing CSR matrix...
Building kernel on X_pca
Computing diffusion components from X_pca for waypoint initialization ... 
Determing nearest neighbor graph...
Done.
Sampling waypoints ...
Done.
Selecting 1274 cells from waypoint initialization.
Initializing residual matrix using greedy column selection
Initializing f and g...
  0%|          | 0/69 [00:00<?, ?it/s]  1%|▏         | 1/69 [00:00<00:28,  2.41it/s]  3%|▎         | 2/69 [00:00<00:27,  2.48it/s]  4%|▍         | 3/69 [00:01<00:26,  2.48it/s]  6%|▌         | 4/69 [00:01<00:26,  2.48it/s]  7%|▋         | 5/69 [00:02<00:25,  2.51it/s]  9%|▊         | 6/69 [00:02<00:24,  2.57it/s] 10%|█         | 7/69 [00:02<00:24,  2.49it/s] 12%|█▏        | 8/69 [00:03<00:26,  2.27it/s] 13%|█▎        | 9/69 [00:03<00:26,  2.23it/s] 14%|█▍        | 10/69 [00:04<00:26,  2.19it/s] 16%|█▌        | 11/69 [00:04<00:28,  2.07it/s] 17%|█▋        | 12/69 [00:05<00:27,  2.04it/s] 19%|█▉        | 13/69 [00:05<00:26,  2.14it/s] 20%|██        | 14/69 [00:06<00:25,  2.17it/s] 22%|██▏       | 15/69 [00:06<00:25,  2.11it/s] 23%|██▎       | 16/69 [00:07<00:24,  2.17it/s] 25%|██▍       | 17/69 [00:07<00:23,  2.19it/s] 26%|██▌       | 18/69 [00:07<00:22,  2.26it/s] 28%|██▊       | 19/69 [00:08<00:20,  2.47it/s] 29%|██▉       | 20/69 [00:08<00:21,  2.33it/s] 30%|███       | 21/69 [00:09<00:20,  2.36it/s] 32%|███▏      | 22/69 [00:09<00:20,  2.28it/s] 33%|███▎      | 23/69 [00:10<00:21,  2.14it/s] 35%|███▍      | 24/69 [00:10<00:21,  2.14it/s] 36%|███▌      | 25/69 [00:11<00:20,  2.12it/s] 38%|███▊      | 26/69 [00:11<00:20,  2.11it/s] 39%|███▉      | 27/69 [00:12<00:20,  2.06it/s] 41%|████      | 28/69 [00:12<00:20,  2.00it/s] 42%|████▏     | 29/69 [00:13<00:20,  1.96it/s] 43%|████▎     | 30/69 [00:13<00:18,  2.12it/s] 45%|████▍     | 31/69 [00:13<00:16,  2.27it/s] 46%|████▋     | 32/69 [00:14<00:17,  2.17it/s] 48%|████▊     | 33/69 [00:15<00:17,  2.06it/s] 49%|████▉     | 34/69 [00:15<00:18,  1.92it/s] 51%|█████     | 35/69 [00:16<00:17,  1.94it/s] 52%|█████▏    | 36/69 [00:16<00:18,  1.82it/s] 54%|█████▎    | 37/69 [00:17<00:17,  1.80it/s] 55%|█████▌    | 38/69 [00:17<00:17,  1.82it/s] 57%|█████▋    | 39/69 [00:18<00:17,  1.71it/s] 58%|█████▊    | 40/69 [00:19<00:18,  1.59it/s] 59%|█████▉    | 41/69 [00:19<00:18,  1.54it/s] 61%|██████    | 42/69 [00:20<00:16,  1.59it/s] 62%|██████▏   | 43/69 [00:21<00:16,  1.56it/s] 64%|██████▍   | 44/69 [00:21<00:15,  1.57it/s] 65%|██████▌   | 45/69 [00:22<00:15,  1.59it/s] 67%|██████▋   | 46/69 [00:23<00:14,  1.56it/s] 68%|██████▊   | 47/69 [00:23<00:14,  1.50it/s] 70%|██████▉   | 48/69 [00:24<00:14,  1.47it/s] 71%|███████   | 49/69 [00:25<00:13,  1.44it/s] 72%|███████▏  | 50/69 [00:25<00:13,  1.42it/s] 74%|███████▍  | 51/69 [00:26<00:12,  1.42it/s] 75%|███████▌  | 52/69 [00:27<00:11,  1.42it/s] 77%|███████▋  | 53/69 [00:28<00:10,  1.46it/s] 78%|███████▊  | 54/69 [00:28<00:10,  1.44it/s] 80%|███████▉  | 55/69 [00:29<00:10,  1.39it/s] 81%|████████  | 56/69 [00:30<00:09,  1.33it/s] 83%|████████▎ | 57/69 [00:31<00:09,  1.32it/s] 84%|████████▍ | 58/69 [00:31<00:08,  1.30it/s] 86%|████████▌ | 59/69 [00:32<00:07,  1.33it/s] 87%|████████▋ | 60/69 [00:33<00:07,  1.28it/s] 88%|████████▊ | 61/69 [00:34<00:06,  1.30it/s] 90%|████████▉ | 62/69 [00:35<00:05,  1.29it/s] 91%|█████████▏| 63/69 [00:35<00:04,  1.32it/s] 93%|█████████▎| 64/69 [00:36<00:03,  1.33it/s] 94%|█████████▍| 65/69 [00:37<00:03,  1.26it/s] 96%|█████████▌| 66/69 [00:38<00:02,  1.24it/s] 97%|█████████▋| 67/69 [00:39<00:01,  1.23it/s] 99%|█████████▊| 68/69 [00:39<00:00,  1.25it/s]100%|██████████| 69/69 [00:40<00:00,  1.21it/s]100%|██████████| 69/69 [00:40<00:00,  1.70it/s]
nohup: ignoring input
findfont: Font family ['Raleway'] not found. Falling back to DejaVu Sans.
findfont: Font family ['Lato'] not found. Falling back to DejaVu Sans.
